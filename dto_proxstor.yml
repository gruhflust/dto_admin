---
- name: Manage Proxmox storage
  hosts: proxmox
  gather_facts: true
  tasks:
    - name: "01 Load storage configuration"
      ansible.builtin.set_fact:
        proxstor: "{{ lookup('template', 'templates/proxstor/' + inventory_hostname + '.yml.j2') | from_yaml }}"

    - name: "02 Check for existing volume group"
      ansible.builtin.command: "vgs {{ proxstor.vg_name }}"
      register: vg_check
      failed_when: false
      changed_when: false

    - name: "03 Find first free block device"
      ansible.builtin.set_fact:
        free_device: >-
          {{ ansible_devices
             | dict2items
             | selectattr('key', 'match', '^(sd|hd|vd|xvd|nvme)')
             | selectattr('value.partitions', 'equalto', {})
             | map(attribute='key')
             | sort
             | map('regex_replace', '^', '/dev/')
             | first | default('') }}
      when: vg_check.rc != 0
      changed_when: false

    - name: "04 Assert free block device exists"
      ansible.builtin.assert:
        that:
          - free_device | length > 0
        fail_msg: "No unused block device found."
      when: vg_check.rc != 0

    - name: "05 Create volume group"
      ansible.builtin.lvg:
        vg: "{{ proxstor.vg_name }}"
        pvs: "{{ free_device }}"
      when: vg_check.rc != 0

    - name: "06 Create thin pool"
      ansible.builtin.lvol:
        vg: "{{ proxstor.vg_name }}"
        thinpool: "{{ proxstor.thinpool_name }}"
        size: 100%FREE
      when: vg_check.rc != 0

    - name: "07 Create thin volumes"
      ansible.builtin.lvol:
        vg: "{{ proxstor.vg_name }}"
        thinpool: "{{ proxstor.thinpool_name }}"
        lv: "{{ item }}"
        size: "{{ proxstor.thin_volume_size }}"
      loop: "{{ proxstor.thin_volumes }}"
      when: vg_check.rc != 0

    - name: "08 Configure Proxmox storage"
      ansible.builtin.blockinfile:
        path: /etc/pve/storage.cfg
        marker: "# {mark} ANSIBLE MANAGED proxstor"
        block: |
          lvmthin: {{ proxstor.storage_name }}
              thinpool {{ proxstor.thinpool_name }}
              vgname {{ proxstor.vg_name }}
              content rootdir,images
        create: true
      notify:
        - Restart pvedaemon
        - Restart pveproxy

    - name: "09 List logical volumes"
      ansible.builtin.command: lvs --units g
      register: lvs_output
      changed_when: false

    - name: "10 Show logical volumes"
      ansible.builtin.debug:
        var: lvs_output.stdout_lines

    - name: "11 List storages"
      ansible.builtin.command: pvesm status
      register: storage_status
      changed_when: false

    - name: "12 Show storages"
      ansible.builtin.debug:
        var: storage_status.stdout_lines

  handlers:
    - name: Restart pvedaemon
      ansible.builtin.service:
        name: pvedaemon
        state: restarted

    - name: Restart pveproxy
      ansible.builtin.service:
        name: pveproxy
        state: restarted
