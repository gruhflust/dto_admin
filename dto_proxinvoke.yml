---
# dto_proxinvoke.yml — v0.2.0
# - GUI: set smbios1 without quotes; dot im Manufacturer wird nur für GUI entfernt
# - Guest: exact strings (inkl. Punkt) via --args -smbios

- name: Create Proxmox virtual machines
  hosts: proxmox
  gather_facts: true

  tasks:
    - name: "01 Verify host availability"
      ansible.builtin.ping:

    - name: "02 Check for host configuration"
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/templates/proxinvoke/{{ inventory_hostname }}.yml.j2"
      register: proxinvoke_template
      delegate_to: localhost

    - name: "02a Skip host without configuration"
      ansible.builtin.debug:
        msg: "Keine Konfiguration für {{ inventory_hostname }} vorhanden – Host wird übersprungen."
      when: not proxinvoke_template.stat.exists

    - meta: end_host
      when: not proxinvoke_template.stat.exists

    - name: "03 Load VM configuration"
      ansible.builtin.set_fact:
        proxinvoke: "{{ lookup('template', playbook_dir ~ '/templates/proxinvoke/' ~ inventory_hostname ~ '.yml.j2') | from_yaml }}"

    - name: "04 Ensure configuration targets this host"
      ansible.builtin.assert:
        that:
          - proxinvoke.target_host == inventory_hostname
        fail_msg: "Konfiguration zielt auf einen anderen Host."

    - name: "05 Check for required storage"
      ansible.builtin.command: pvesm status
      register: storage_status
      changed_when: false

    - name: "06 Assert storage present"
      ansible.builtin.assert:
        that:
          - proxinvoke.storage in storage_status.stdout
        fail_msg: "Benötigtes Storage {{ proxinvoke.storage }} nicht vorhanden."

    - name: "07 Check if VM already exists"
      ansible.builtin.command: qm list
      register: qm_list
      changed_when: false

    # ---------- Build GUI-safe smbios1 (no quotes; dot entfernt NUR für GUI) ----------
    - name: "07b Build smbios1 for GUI"
      ansible.builtin.set_fact:
        smbios1_gui: >-
          uuid={{ proxinvoke.smbios1.uuid }},
          manufacturer={{ (proxinvoke.smbios1.manufacturer | string | regex_replace('\.', '')) }},
          product={{ (proxinvoke.smbios1.product | string) }}
      when: proxinvoke.smbios1 is defined
      changed_when: false

    # ---------- Build exact QEMU -smbios (mit Punkt, mit Quotes) ----------
    - name: "07c Build exact -smbios for guest"
      ansible.builtin.set_fact:
        smbios_args_exact: >-
          -smbios type=1,uuid={{ proxinvoke.smbios1.uuid }},
          manufacturer="{{ proxinvoke.smbios1.manufacturer }}",
          product="{{ proxinvoke.smbios1.product }}"
      when: proxinvoke.smbios1 is defined
      changed_when: false

    # ---------- Create VM ----------
    - name: "08 Create VM"
      ansible.builtin.command: >-
        qm create {{ proxinvoke.vmid }}
        --name {{ proxinvoke.name }}
        --memory {{ proxinvoke.memory }}
        --cores {{ proxinvoke.cores }}
        --net0 {{ proxinvoke.networks[0] }}
        {% if proxinvoke.smbios1 is defined %}
        --smbios1 "{{ smbios1_gui }}"
        --args '{{ smbios_args_exact }}'
        {% endif %}
      when: proxinvoke.vmid|string not in qm_list.stdout

    # ---------- Disk ----------
    - name: "09 Configure disk"
      ansible.builtin.command: >-
        qm set {{ proxinvoke.vmid }}
        --scsi0 {{ proxinvoke.storage }}:{{ proxinvoke.disk_size | regex_replace('[^0-9]', '') | int }},discard=on
      when: proxinvoke.vmid|string not in qm_list.stdout

    # ---------- Ensure SMBIOS stays consistent ----------
    - name: "10 Set exact SMBIOS (guest) + GUI smbios1"
      ansible.builtin.command: >-
        qm set {{ proxinvoke.vmid }}
        --args '{{ smbios_args_exact }}'
        --smbios1 "{{ smbios1_gui }}"
      when: proxinvoke.smbios1 is defined

    # ---------- Status / Verification ----------
    - name: "11 Check VM status"
      ansible.builtin.command: "qm status {{ proxinvoke.vmid }}"
      register: vm_status
      changed_when: false

    - name: "12 Display VM status"
      ansible.builtin.debug:
        var: vm_status.stdout_lines

    - name: "13 Verify smbios1 in config"
      ansible.builtin.command: "qm config {{ proxinvoke.vmid }}"
      register: qm_cfg
      changed_when: false

    - name: "14 Show smbios1 line"
      ansible.builtin.debug:
        msg: "{{ (qm_cfg.stdout_lines | select('match', '^smbios1:') | list | first) | default('smbios1: <not found>') }}"
