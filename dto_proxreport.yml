---
- name: Show Proxmox host status
  hosts: proxmox
  gather_facts: true

  tasks:
    - name: "01 List storages"
      ansible.builtin.command: pvesm status
      register: storage_status
      changed_when: false

    - name: "02 Show storages"
      ansible.builtin.debug:
        var: storage_status.stdout_lines

    - name: "03 List Proxmox network configuration"
      ansible.builtin.command: >
        pvesh get /nodes/{{ ansible_hostname }}/network --output-format json
      register: network_config
      changed_when: false

    - name: "04 Show network configuration"
      ansible.builtin.debug:
        msg: "{{ network_config.stdout | from_json | to_nice_yaml }}"

    - name: "05 Show IP addresses"
      ansible.builtin.command: ip -o addr show
      register: ip_addr_output
      changed_when: false

    - name: "06 Display IP addresses"
      ansible.builtin.debug:
        var: ip_addr_output.stdout_lines

    - name: "07 Show Proxmox version"
      ansible.builtin.command: pveversion
      register: pve_version
      changed_when: false

    - name: "08 Display Proxmox version"
      ansible.builtin.debug:
        var: pve_version.stdout_lines

    - name: "09 List block devices"
      ansible.builtin.command: lsblk --output NAME,SIZE,TYPE,MOUNTPOINT
      register: block_devices
      changed_when: false

    - name: "10 Show block devices"
      ansible.builtin.debug:
        var: block_devices.stdout_lines

    - name: "11 Gather CPU details"
      ansible.builtin.command: lscpu
      register: cpu_details
      changed_when: false

    - name: "12 Display CPU details"
      ansible.builtin.debug:
        var: cpu_details.stdout_lines

    - name: "13 Gather memory details"
      ansible.builtin.command: free -h
      register: memory_details
      changed_when: false

    - name: "14 Display memory details"
      ansible.builtin.debug:
        var: memory_details.stdout_lines

    - name: "15 Get system uptime"
      ansible.builtin.command: uptime -p
      register: uptime
      changed_when: false

    - name: "16 Show system uptime"
      ansible.builtin.debug:
        var: uptime.stdout

    # -------- VM-Liste als JSON ziehen --------
    - name: "17 List virtual machines (JSON)"
      ansible.builtin.command: >
        pvesh get /nodes/{{ ansible_hostname }}/qemu --output-format json
      register: vm_list_json
      changed_when: false

    - name: "17a Parse VM list"
      ansible.builtin.set_fact:
        vm_list_parsed: "{{ vm_list_json.stdout | from_json | default([]) }}"
        vm_smbios_info: []
      changed_when: false

    # -------- FÃ¼r jede VM SMBIOS sammeln --------
    - name: "18 Collect SMBIOS from qm config and showcmd"
      block:
        - name: "18a Get qm config"
          ansible.builtin.command: "qm config {{ item.vmid }}"
          register: vm_cfg
          changed_when: false

        - name: "18b Extract smbios1 line (if present)"
          ansible.builtin.set_fact:
            _smbios1_line: "{{ (vm_cfg.stdout_lines | select('match', '^smbios1:') | list | first) | default('') }}"
          changed_when: false

        - name: "18c Build map from smbios1 (uuid/manufacturer/product)"
          ansible.builtin.set_fact:
            _map_cfg: "{{ dict(_smbios1_line | regex_findall('([a-z]+)=([^,\\s]+)')) 
                          | combine(dict(_smbios1_line | regex_findall('([a-z]+)=\"?([^\",]+)\"?'))) }}"
          changed_when: false

        - name: "18d Get qm showcmd (pretty)"
          ansible.builtin.command: "qm showcmd {{ item.vmid }} --pretty"
          register: vm_showcmd
          changed_when: false

        - name: "18e Extract '-smbios type=1,...' segment"
          ansible.builtin.set_fact:
            _smbios_seg: >-
              {{ vm_showcmd.stdout
                  | regex_replace('(?s)^.*-smbios type=1,', '')
                  | regex_replace('(?s)\\s-.*$', '') }}
          changed_when: false

        - name: "18f Build map from showcmd smbios (quotes ok)"
          ansible.builtin.set_fact:
            _map_args: "{{ dict(_smbios_seg | regex_findall('([a-z]+)=\\\"?([^\\\",]+)\\\"?')) }}"
          changed_when: false

        - name: "18g Compose final per-VM SMBIOS dict"
          ansible.builtin.set_fact:
            vm_smbios_info: >-
              {{ vm_smbios_info + [ {
                  'vmid': item.vmid,
                  'name': item.name | default(''),
                  'uuid': (_map_cfg.uuid | default(_map_args.uuid | default(''))),
                  'manufacturer': (_map_cfg.manufacturer | default(_map_args.manufacturer | default(''))),
                  'product': (_map_cfg.product | default(_map_args.product | default('')))
                } ] }}
          changed_when: false
      loop: "{{ vm_list_parsed }}"
      loop_control:
        label: "{{ item.vmid }}"

    - name: "18h Show VM SMBIOS summary"
      ansible.builtin.debug:
        var: vm_smbios_info

    - name: "19 Collect data for report"
      ansible.builtin.set_fact:
        proxreport_data:
          storage_status: "{{ storage_status.stdout_lines }}"
          network_config: "{{ network_config.stdout | from_json }}"
          ip_addresses: "{{ ip_addr_output.stdout_lines }}"
          pve_version: "{{ pve_version.stdout_lines }}"
          block_devices: "{{ block_devices.stdout_lines }}"
          cpu_details: "{{ cpu_details.stdout_lines }}"
          memory_details: "{{ memory_details.stdout_lines }}"
          uptime: "{{ uptime.stdout }}"
          creation_date: "{{ ansible_date_time.iso8601 }}"
          vm_list: "{{ vm_list_parsed }}"
          vm_smbios: "{{ vm_smbios_info }}"
        cacheable: true

    - name: "20 Build Proxmox summary HTML"
      ansible.builtin.template:
        src: templates/proxmox_summary.html.j2
        dest: proxmox-summary.html
      delegate_to: localhost
      run_once: true
